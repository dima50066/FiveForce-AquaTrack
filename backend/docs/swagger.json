{
  "openapi": "3.0.0",
  "info": {
    "title": "My Water App",
    "version": "1.0.0",
    "description": "API for tracking daily water consumption and user activities.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://fiveforce-aquatrack.onrender.com"
    },
    {
      "url": "http://localhost:5000"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Operations related to water consumption."
    },
    {
      "name": "Auth",
      "description": "Operations related to user authentication."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "description": "Register a new user in the system.",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User registration details.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "securePassword123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Login with credentials to receive a JWT token.",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User login credentials.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "securePassword123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "User's full name"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "User's email address"
                        },
                        "avatar": {
                          "type": "string",
                          "description": "URL of the user's avatar image"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "woman",
                            "man"
                          ],
                          "description": "User's gender"
                        },
                        "weight": {
                          "type": "integer",
                          "description": "User's weight in kg"
                        },
                        "activeTime": {
                          "type": "integer",
                          "description": "User's total active time in hours"
                        },
                        "dailyNorm": {
                          "type": "integer",
                          "description": "User's daily water intake norm in ml"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "description": "Log the user out by invalidating their JWT token.",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user",
        "description": "Retrieve the details of the currently authenticated user.",
        "operationId": "getCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "gender": {
                      "type": "string",
                      "enum": [
                        "woman",
                        "man"
                      ],
                      "example": "woman"
                    },
                    "weight": {
                      "type": "number",
                      "example": 70
                    },
                    "activeTime": {
                      "type": "number",
                      "example": 45
                    },
                    "dailyNorm": {
                      "type": "number",
                      "example": 2500
                    },
                    "avatar": {
                      "type": "string",
                      "example": "https://example.com/path/to/avatar.jpg",
                      "description": "URL to user's avatar"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update current user details",
        "description": "Update the details of the currently authenticated user.",
        "operationId": "updateCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User details to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe Updated"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe.updated@example.com"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "Woman",
                      "Man"
                    ],
                    "example": "Woman"
                  },
                  "weight": {
                    "type": "number",
                    "example": 75
                  },
                  "activeTime": {
                    "type": "number",
                    "example": 50
                  },
                  "dailyNorm": {
                    "type": "number",
                    "example": 2700
                  }
                },
                "required": [
                  "name",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/{id}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water consumption record by ID",
        "operationId": "getWaterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique ID of the water consumption record",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waterSchema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Water"
          },
          "404": {
            "$ref": "#/components/responses/404Water"
          }
        }
      },
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update water consumption record by ID",
        "operationId": "updateWaterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique ID of the water consumption record",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update the water consumption record",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waterSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waterSchema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401Water"
          },
          "404": {
            "$ref": "#/components/responses/404Water"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water consumption record by ID",
        "operationId": "deleteWaterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique ID of the water consumption record",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record successfully deleted"
          },
          "401": {
            "$ref": "#/components/responses/401Water"
          },
          "404": {
            "$ref": "#/components/responses/404Water"
          }
        }
      }
    },
    "/water": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get all water consumption records",
        "description": "Retrieve all water consumption records for the authenticated user.",
        "operationId": "getAllWaterRecords",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved water consumption records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waterSchema"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create a water consumption record",
        "operationId": "createWater",
        "requestBody": {
          "description": "Data to create a new water consumption record",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waterSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Record successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waterSchema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401Water"
          }
        }
      }
    },
    "/water/day/{date}": {
      "get": {
        "summary": "Get water consumption data for a specific day",
        "description": "Returns water consumption details for the specified day.",
        "tags": [
          "Water"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "description": "Date in timestamp format (milliseconds).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data for water consumption on the specified day.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterByDay"
                }
              }
            }
          },
          "400": {
            "description": "Invalid date format."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/month/{date}": {
      "get": {
        "summary": "Get water consumption data for a specific month",
        "description": "Returns water consumption details for the specified month.",
        "tags": [
          "Water"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "description": "Month in timestamp format (milliseconds).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data for water consumption over the specified month.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateParam": {
                        "type": "string",
                        "format": "date"
                      },
                      "totalDayWater": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid date format."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "200": {
        "description": "Successfully processed the request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Request successfully processed"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Operation completed successfully"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "201": {
        "description": "User registered successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "User registered successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "67890"
                    },
                    "name": {
                      "type": "string",
                      "example": "New Resource"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-11-27T12:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request due to invalid data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid date format"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid date format"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Route not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Route not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict (user already exists)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "User with this email is already exist!"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "$ref": "#/components/responses/404"
      },
      "Unauthorized": {
        "$ref": "#/components/responses/401"
      },
      "401Water": {
        "description": "Unauthorized access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Authentication required"
                }
              }
            }
          }
        }
      },
      "404Water": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Record not found"
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid date format"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "User": {
        "$ref": "#/components/schemas/userSchema"
      },
      "Water": {
        "$ref": "#/components/schemas/waterSchema"
      },
      "waterSchema": {
        "type": "object",
        "properties": {
          "date": {
            "type": "integer",
            "description": "Date of water consumption (timestamp)",
            "example": 1682342400000
          },
          "amount": {
            "type": "integer",
            "description": "Amount of water consumed in milliliters",
            "example": 500
          }
        },
        "required": [
          "date",
          "amount",
          "owner"
        ]
      },
      "WaterByDay": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of water consumption",
            "example": "2024-04-01"
          },
          "totalDayWater": {
            "type": "integer",
            "description": "Total amount of water consumed for the day (ml)",
            "example": 2000
          },
          "WaterData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/waterSchema"
            },
            "description": "Details of the water consumed on this day"
          }
        }
      },
      "userSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "description": "Name of the user. Must be between 3 and 20 characters."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user. Should be a valid email format."
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "URL of the user's avatar image. Must be a valid URL."
          },
          "gender": {
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "description": "Gender of the user. Must be either 'woman' or 'man' (in lowercase)."
          },
          "weight": {
            "type": "number",
            "minimum": 0,
            "maximum": 500,
            "description": "Weight of the user in kilograms. Should be between 0 and 500 kg."
          },
          "activeTime": {
            "type": "number",
            "minimum": 0,
            "description": "Active time of the user in hours. Should be a positive number."
          },
          "dailyNorm": {
            "type": "number",
            "minimum": 1500,
            "maximum": 5000,
            "description": "Daily water intake norm for the user in milliliters. Should be between 1500 and 5000 ml."
          }
        },
        "required": [
          "name",
          "email"
        ]
      }
    }
  }
}